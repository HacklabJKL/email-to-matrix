#!/bin/sh -eu

# Read configuration
. "`dirname $0`/matrix.conf"

matrix () {
    payload=${3+--data-binary @-}
    curl -X $1 $payload \
	 -H "Content-Type: ${3-}" \
	 -H "Authorization: Bearer $token" \
         "$server/_matrix/$2"
}

get_id () {
    room_esc=`echo "$1" | jq -Rr @uri`
    matrix POST "client/r0/join/$room_esc" | jq -cr '.room_id | @uri'
}

# Is there anyone at Hacklab?
if curl "$visitors/api/v1/visitors?format=json" | jq -e '.!=[]'; then
    echo Hacklab is occupied, not alerting.
    exit
fi

# Unpacking message payload
dir=`mktemp -d`
cd $dir
munpack -t

# Extracting camera name and renaming attachment
export camera_name="`sed -rn 's/^Motion Detected on camera (.*)/\1/p' <part1 | sed 's/ *$//g'`"

# Composing Matrix message. Specs: https://matrix.org/docs/spec/client_server/latest#m-image
room_id="`get_id "$room"`"
matrix POST media/r0/upload image/jpeg <part5 |
    jq '{"body": env.camera_name, "msgtype": "m.image", "url": .content_uri }' |
    matrix PUT "client/r0/rooms/$room_id/send/m.room.message/`uuidgen`" application/json

# Removing the temp dir
rm -r "$dir"
